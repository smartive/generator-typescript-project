// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript project generator git should add base files 1`] = `
Array [
  "git",
  Array [
    "add",
    ".",
  ],
]
`;

exports[`typescript project generator git should add git remote origin 1`] = `
Array [
  "git",
  Array [
    "remote",
    "add",
    "origin",
    "https://github.com/smartive/generator-typescript-project",
  ],
]
`;

exports[`typescript project generator git should commit the base files 1`] = `
Array [
  "git",
  Array [
    "commit",
    "-am",
    "\\"chore: Initial commit.\\"",
  ],
]
`;

exports[`typescript project generator git should initialize a git repo 1`] = `
Array [
  "git",
  Array [
    "init",
  ],
]
`;

exports[`typescript project generator install should add typedoc dev dependency 1`] = `
Array [
  "npm",
  Array [
    "i",
    "-D",
    "@smartive/tslint-config",
    "@types/jest",
    "del-cli",
    "jest",
    "semantic-release",
    "ts-jest",
    "tslint",
    "tsutils",
    "typescript",
    "typedoc",
  ],
]
`;

exports[`typescript project generator install should install dev dependencies 1`] = `
Array [
  "npm",
  Array [
    "i",
    "-D",
    "@smartive/tslint-config",
    "@types/jest",
    "del-cli",
    "jest",
    "semantic-release",
    "ts-jest",
    "tslint",
    "tsutils",
    "typescript",
  ],
]
`;

exports[`typescript project generator install should install tslib 1`] = `
Array [
  "npm",
  Array [
    "i",
    "-S",
    "tslib",
  ],
]
`;

exports[`typescript project generator template files should a default package json 1`] = `
"{
  \\"name\\": \\"name\\",
  \\"version\\": \\"0.0.0-development\\",
  \\"description\\": \\"description\\",
  \\"main\\": \\"index.js\\",
  \\"typings\\": \\"index.d.ts\\",
  \\"scripts\\": {
    \\"clean\\": \\"del-cli ./build ./coverage\\",
    \\"build\\": \\"npm run clean && tsc -p ./config/tsconfig.build.json\\",
    \\"develop\\": \\"npm run clean && tsc -p .\\",
    \\"lint\\": \\"tslint -c ./tslint.json -p ./config/tsconfig.build.json\\",
    \\"test\\": \\"npm run lint && npm run clean && jest -c ./jest.json\\",
    \\"test:watch\\": \\"npm run clean && jest -c ./jest.json --watch\\",
    \\"semantic-release\\": \\"semantic-release\\"
  },
  \\"keywords\\": [],
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/USER/REPO.git\\"
  },
  \\"bugs\\": {
    \\"url\\": \\"https://github.com/USER/REPO/issues\\"
  },
  \\"homepage\\": \\"https://github.com/USER/REPO#readme\\",
  \\"engines\\": {
    \\"node\\": \\"^9.0.0\\",
    \\"npm\\": \\"*\\"
  },
  \\"author\\": \\"gitUser <gitEmail>\\",
  \\"license\\": \\"ISC\\"
}
"
`;

exports[`typescript project generator template files should add CI configs to npm ignore 1`] = `
"# Logs
logs
*.log
npm-debug.log*

# Dependency directory
node_modules

# Typescript stuff
build/
coverage/
config/
tsconfig.json
tslint.json

# Typescript files (but not the definitions)
*.ts
!*.d.ts

# Testfiles
jest.json
test/


# CI Configs
.gitlab-ci.yml
.travis.yml
.appveyor.yml



"
`;

exports[`typescript project generator template files should add a default git ignore 1`] = `
"# Logs
logs
*.log
npm-debug.log*

# Dependency directory
node_modules

# Typescript stuff
build
coverage


"
`;

exports[`typescript project generator template files should add a jest config 1`] = `
"{
    \\"collectCoverage\\": true,
    \\"mapCoverage\\": true,
    \\"transform\\": {
        \\"^.+\\\\\\\\.tsx?$\\": \\"<rootDir>/node_modules/ts-jest/preprocessor.js\\"
    },
    \\"testMatch\\": [
        \\"**/test/**/*.spec.ts\\"
    ],
    \\"testPathIgnorePatterns\\": [
        \\"/node_modules/\\"
    ],
    \\"moduleFileExtensions\\": [
        \\"ts\\",
        \\"tsx\\",
        \\"js\\",
        \\"json\\"
    ]
}
"
`;

exports[`typescript project generator template files should add a npm ignore 1`] = `
"# Logs
logs
*.log
npm-debug.log*

# Dependency directory
node_modules

# Typescript stuff
build/
coverage/
config/
tsconfig.json
tslint.json

# Typescript files (but not the definitions)
*.ts
!*.d.ts

# Testfiles
jest.json
test/




"
`;

exports[`typescript project generator template files should add a readme 1`] = `
"# name

This is a typescript project.

description
"
`;

exports[`typescript project generator template files should add access config to package json if package is scoped 1`] = `
"{
  \\"name\\": \\"@smartive/scoped-name\\",
  \\"version\\": \\"0.0.0-development\\",
  \\"description\\": \\"description\\",
  \\"main\\": \\"index.js\\",
  \\"typings\\": \\"index.d.ts\\",
  \\"scripts\\": {
    \\"clean\\": \\"del-cli ./build ./coverage\\",
    \\"build\\": \\"npm run clean && tsc -p ./config/tsconfig.build.json\\",
    \\"develop\\": \\"npm run clean && tsc -p .\\",
    \\"lint\\": \\"tslint -c ./tslint.json -p ./config/tsconfig.build.json\\",
    \\"test\\": \\"npm run lint && npm run clean && jest -c ./jest.json\\",
    \\"test:watch\\": \\"npm run clean && jest -c ./jest.json --watch\\",
    \\"semantic-release\\": \\"semantic-release\\"
  },
  \\"keywords\\": [],
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/USER/REPO.git\\"
  },
  \\"bugs\\": {
    \\"url\\": \\"https://github.com/USER/REPO/issues\\"
  },
  \\"homepage\\": \\"https://github.com/USER/REPO#readme\\",
  \\"engines\\": {
    \\"node\\": \\"^9.0.0\\",
    \\"npm\\": \\"*\\"
  },
  \\"author\\": \\"gitUser <gitEmail>\\",
  \\"license\\": \\"ISC\\",
  \\"publishConfig\\": {
    \\"access\\": \\"public\\"
  }
}
"
`;

exports[`typescript project generator template files should add an editorconfig 1`] = `
"root = true

[*]
indent_style = space
indent_size = 2
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
max_line_length = 125

[*.md]
trim_trailing_whitespace = false
"
`;

exports[`typescript project generator template files should add appveyor ci if selected 1`] = `
"version: \\"{build} - {branch}\\"
skip_tags: true
skip_branch_with_pr: true

matrix:
  fast_finish: true

environment:
  matrix:
    - nodejs_version: \\"9\\"

install:
  - ps: Install-Product node $env:nodejs_version
  - npm ci

test_script:
  - npm test
  - npm install -g codecov
  - codecov

build: off
"
`;

exports[`typescript project generator template files should add appveyor ci if selected 2`] = `
"version: \\"{build} - {branch}\\"
skip_tags: true
skip_branch_with_pr: true

matrix:
  fast_finish: true

environment:
  matrix:
    - nodejs_version: \\"9\\"

install:
  - ps: Install-Product node $env:nodejs_version
  - npm install

test_script:
  - npm test
  - npm install -g codecov
  - codecov

build: off
"
`;

exports[`typescript project generator template files should add default ts base config 1`] = `
"{
    \\"compilerOptions\\": {
        \\"target\\": \\"es6\\",
        \\"module\\": \\"commonjs\\",
        \\"moduleResolution\\": \\"node\\",
        \\"removeComments\\": false,
        \\"outDir\\": \\"../build\\",
        \\"rootDir\\": \\"../src\\",
        \\"declaration\\": true,
        \\"sourceMap\\": false,
        \\"importHelpers\\": true,
        \\"strict\\": true,
        \\"noUnusedLocals\\": true,
        \\"noUnusedParameters\\": true,
        \\"lib\\": [
            \\"es2015\\"
        ]
    },
    \\"include\\": [
        \\"../src/**/*\\"
    ],
    \\"exclude\\": []
}
"
`;

exports[`typescript project generator template files should add default ts build config 1`] = `
"{
    \\"extends\\": \\"./tsconfig.base.json\\",
    \\"compilerOptions\\": {
        \\"outDir\\": \\"../\\"
    }
}
"
`;

exports[`typescript project generator template files should add default tsconfig 1`] = `
"{
    \\"extends\\": \\"./config/tsconfig.base.json\\",
    \\"compilerOptions\\": {
        \\"watch\\": true,
        \\"sourceMap\\": true
    }
}
"
`;

exports[`typescript project generator template files should add default tslint config 1`] = `
"{
    \\"extends\\": \\"@smartive/tslint-config\\"
}
"
`;

exports[`typescript project generator template files should add doc to git ignore 1`] = `
"# Logs
logs
*.log
npm-debug.log*

# Dependency directory
node_modules

# Typescript stuff
build
coverage


# Documentation
docs/

"
`;

exports[`typescript project generator template files should add doc to npm ignore 1`] = `
"# Logs
logs
*.log
npm-debug.log*

# Dependency directory
node_modules

# Typescript stuff
build/
coverage/
config/
tsconfig.json
tslint.json

# Typescript files (but not the definitions)
*.ts
!*.d.ts

# Testfiles
jest.json
test/




# Documentation
docs/

"
`;

exports[`typescript project generator template files should add dom lib in build config with typedoc 1`] = `
"{
    \\"compilerOptions\\": {
        \\"target\\": \\"es6\\",
        \\"module\\": \\"commonjs\\",
        \\"moduleResolution\\": \\"node\\",
        \\"removeComments\\": false,
        \\"outDir\\": \\"../build\\",
        \\"rootDir\\": \\"../src\\",
        \\"declaration\\": true,
        \\"sourceMap\\": false,
        \\"importHelpers\\": true,
        \\"strict\\": true,
        \\"noUnusedLocals\\": true,
        \\"noUnusedParameters\\": true,
        \\"lib\\": [
            \\"es2015\\",
            \\"dom\\"
        ]
    },
    \\"include\\": [
        \\"../src/**/*\\"
    ],
    \\"exclude\\": []
}
"
`;

exports[`typescript project generator template files should add gitlab ci if selected 1`] = `
"image: node:9

stages:
  - test
  - release

test library:
  stage: test
  before_script:
    - npm install
  coverage: /All files\\\\s*\\\\|\\\\s*([\\\\d\\\\.]+)/
  except:
    - tags

release library:
  stage: release
  before_script:
    - npm install
    - npm run build
  script:
    - npm run semantic-release
  only:
    - master
"
`;

exports[`typescript project generator template files should add gitlab ci if selected 2`] = `
"image: node:9

stages:
  - test
  - release

test application:
  stage: test
  before_script:
    - npm ci
  coverage: /All files\\\\s*\\\\|\\\\s*([\\\\d\\\\.]+)/
  except:
    - tags

release application:
  stage: release
  before_script:
    - npm ci
    - npm run build
  script:
    - npm run semantic-release
  only:
    - master
"
`;

exports[`typescript project generator template files should add giturl to package json 1`] = `
"{
  \\"name\\": \\"name\\",
  \\"version\\": \\"0.0.0-development\\",
  \\"description\\": \\"description\\",
  \\"main\\": \\"index.js\\",
  \\"typings\\": \\"index.d.ts\\",
  \\"scripts\\": {
    \\"clean\\": \\"del-cli ./build ./coverage\\",
    \\"build\\": \\"npm run clean && tsc -p ./config/tsconfig.build.json\\",
    \\"develop\\": \\"npm run clean && tsc -p .\\",
    \\"lint\\": \\"tslint -c ./tslint.json -p ./config/tsconfig.build.json\\",
    \\"test\\": \\"npm run lint && npm run clean && jest -c ./jest.json\\",
    \\"test:watch\\": \\"npm run clean && jest -c ./jest.json --watch\\",
    \\"semantic-release\\": \\"semantic-release\\"
  },
  \\"keywords\\": [],
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/smartive/generator-typescript-project.git\\"
  },
  \\"bugs\\": {
    \\"url\\": \\"https://github.com/smartive/generator-typescript-project/issues\\"
  },
  \\"homepage\\": \\"https://github.com/smartive/generator-typescript-project#readme\\",
  \\"engines\\": {
    \\"node\\": \\"^9.0.0\\",
    \\"npm\\": \\"*\\"
  },
  \\"author\\": \\"gitUser <gitEmail>\\",
  \\"license\\": \\"ISC\\"
}
"
`;

exports[`typescript project generator template files should add travis ci if selected 1`] = `
"language: node_js
node_js: '9'

stages:
  - name: test
    if: tag IS blank
  - name: deploy
    if: branch = master AND type != pull_request

notifications:
  email: false

jobs:
  include:
    - stage: test

      after_success:
        - npm i -g codecov
        - codecov

    - stage: deploy
      before_script: npm run build
      script: npm run semantic-release
"
`;

exports[`typescript project generator template files should add travis ci if selected 2`] = `
"language: node_js
node_js: '9'

stages:
  - name: test
    if: tag IS blank
  - name: deploy
    if: branch = master AND type != pull_request

notifications:
  email: false

install: npm ci

jobs:
  include:
    - stage: test

      before_script:
        - npm i -g greenkeeper-lockfile@1
        - greenkeeper-lockfile-update
      after_script:
        - greenkeeper-lockfile-upload

      after_success:
        - npm i -g codecov
        - codecov

    - stage: deploy
      before_script: npm run build
      script: npm run semantic-release
"
`;

exports[`typescript project generator template files should add travis ci if selected 3`] = `
"language: node_js
node_js: '9'

stages:
  - name: test
    if: tag IS blank
  - name: deploy
    if: branch = master AND type != pull_request

notifications:
  email: false

jobs:
  include:
    - stage: test

      after_success:
        - npm i -g codecov
        - codecov

    - stage: deploy
      script: npm run typedoc
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GH_TOKEN
        local_dir: ./docs

    - stage: deploy
      before_script: npm run build
      script: npm run semantic-release
"
`;

exports[`typescript project generator template files should add typedoc to package json 1`] = `
"{
  \\"name\\": \\"name\\",
  \\"version\\": \\"0.0.0-development\\",
  \\"description\\": \\"description\\",
  \\"main\\": \\"app.js\\",
  \\"scripts\\": {
    \\"clean\\": \\"del-cli ./build ./coverage\\",
    \\"build\\": \\"npm run clean && tsc -p ./config/tsconfig.build.json\\",
    \\"develop\\": \\"npm run clean && tsc -p .\\",
    \\"lint\\": \\"tslint -c ./tslint.json -p ./config/tsconfig.build.json\\",
    \\"test\\": \\"npm run lint && npm run clean && jest -c ./jest.json\\",
    \\"test:watch\\": \\"npm run clean && jest -c ./jest.json --watch\\",
    \\"semantic-release\\": \\"semantic-release\\",
    \\"typedoc\\": \\"del-cli ./docs && typedoc --ignoreCompilerErrors --out ./docs --mode file --tsconfig ./config/tsconfig.build.json ./src/\\"
  },
  \\"keywords\\": [],
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/USER/REPO.git\\"
  },
  \\"bugs\\": {
    \\"url\\": \\"https://github.com/USER/REPO/issues\\"
  },
  \\"homepage\\": \\"https://github.com/USER/REPO#readme\\",
  \\"engines\\": {
    \\"node\\": \\"^9.0.0\\",
    \\"npm\\": \\"*\\"
  },
  \\"author\\": \\"gitUser <gitEmail>\\",
  \\"license\\": \\"ISC\\"
}
"
`;

exports[`typescript project generator template files should change main in package json file for application type 1`] = `
"{
  \\"name\\": \\"name\\",
  \\"version\\": \\"0.0.0-development\\",
  \\"description\\": \\"description\\",
  \\"main\\": \\"app.js\\",
  \\"scripts\\": {
    \\"clean\\": \\"del-cli ./build ./coverage\\",
    \\"build\\": \\"npm run clean && tsc -p ./config/tsconfig.build.json\\",
    \\"develop\\": \\"npm run clean && tsc -p .\\",
    \\"lint\\": \\"tslint -c ./tslint.json -p ./config/tsconfig.build.json\\",
    \\"test\\": \\"npm run lint && npm run clean && jest -c ./jest.json\\",
    \\"test:watch\\": \\"npm run clean && jest -c ./jest.json --watch\\",
    \\"semantic-release\\": \\"semantic-release\\"
  },
  \\"keywords\\": [],
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/USER/REPO.git\\"
  },
  \\"bugs\\": {
    \\"url\\": \\"https://github.com/USER/REPO/issues\\"
  },
  \\"homepage\\": \\"https://github.com/USER/REPO#readme\\",
  \\"engines\\": {
    \\"node\\": \\"^9.0.0\\",
    \\"npm\\": \\"*\\"
  },
  \\"author\\": \\"gitUser <gitEmail>\\",
  \\"license\\": \\"ISC\\"
}
"
`;

exports[`typescript project generator template files should change out dir in ts build config for application 1`] = `
"{
    \\"extends\\": \\"./tsconfig.base.json\\",
    \\"compilerOptions\\": {
        \\"outDir\\": \\"../build\\"
    }
}
"
`;

exports[`typescript project generator template files should remove comments and declarations in build config for application 1`] = `
"{
    \\"compilerOptions\\": {
        \\"target\\": \\"es6\\",
        \\"module\\": \\"commonjs\\",
        \\"moduleResolution\\": \\"node\\",
        \\"removeComments\\": true,
        \\"outDir\\": \\"../build\\",
        \\"rootDir\\": \\"../src\\",
        \\"declaration\\": false,
        \\"sourceMap\\": false,
        \\"importHelpers\\": true,
        \\"strict\\": true,
        \\"noUnusedLocals\\": true,
        \\"noUnusedParameters\\": true,
        \\"lib\\": [
            \\"es2015\\"
        ]
    },
    \\"include\\": [
        \\"../src/**/*\\"
    ],
    \\"exclude\\": []
}
"
`;
